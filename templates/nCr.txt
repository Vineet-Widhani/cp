const int N = 2e5 + 1;
int fact[N], inv[N], invfact[N];
void factInverse() {
    fact[0] = inv[1] = fact[1] = invfact[0] = invfact[1] = 1;
    for (long long i = 2; i < N; i++) {
        fact[i] = (fact[i - 1] * i) % mod1;
        inv[i] = mod1 - (inv[mod1 % i] * (mod1 / i) % mod1);
        invfact[i] = (inv[i] * invfact[i - 1]) % mod1;
    }
}

int add(int a, int b) {
    if ((a += b) >= mod1)
        a -= mod1;
    else if (a < 0)
        a += mod1;
    return a;
}

int mul(int x, int y) {
    return (1LL * x * y) % mod1;
}

int nCr(int n, int r) {
    if (r > n)
        return 0;
    return mul(mul(fact[n], invfact[r]), invfact[n - r]);
}